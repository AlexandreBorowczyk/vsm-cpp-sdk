<?xml version='1.0'?>
<mavlink>         
    <!-- mavlink ID range: 226 - 255                             -->
	<enums>	
		<enum name="ADSB_TRANSPONDER_MODE">
		    <description>ADSB Transponder state</description>
		    <entry value="1" name="ADSB_TRANSPONDER_MODE_OFF">
		        <description>Transponder OFF</description>
		    </entry>
		    <entry value="2" name="ADSB_TRANSPONDER_MODE_STBY">
		        <description>Transponder on standby</description>
		    </entry>
		    <entry value="3" name="ADSB_TRANSPONDER_MODE_ON">
		        <description>Transponder sending coordinates</description>
		    </entry>
		    <entry value="4" name="ADSB_TRANSPONDER_MODE_ALT">
		        <description>Transponder sending coordinates and altitude</description>
		    </entry>
		</enum>	 
		<enum name="MAV_CMD">
			<entry name="MAV_CMD_ADSB_SET_MODE" value="52001">
				<param index="1">See enum SPH_ADSB_TRANSPONDER_MODE</param>
			</entry>						
		</enum>
	</enums>	
	<messages>
		<message id="227" name="PARAM_STR_SET">
            <field type="uint8_t" name="target_system">System ID</field>
            <field type="uint8_t" name="target_component">Component ID</field>
            <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
            <field type="char[16]" name="param_value">Onboard parameter value</field>
		</message>
		<message id="228" name="PARAM_STR_REQUEST_READ">
            <description>Request to read the onboard parameter with the param_id string id. Onboard parameters are stored as key[const char*] -> value[float]. This allows to send a parameter to any other component (such as the GCS) without the need of previous knowledge of possible parameter names. Thus the same GCS can store different parameters for different autopilots. See also http://qgroundcontrol.org/parameter_interface for a full documentation of QGroundControl and IMU code.</description>
            <field type="uint8_t" name="target_system">System ID</field>
            <field type="uint8_t" name="target_component">Component ID</field>
            <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
            <field type="int16_t" name="param_index">Parameter index. Send -1 to use the param ID field as identifier (else the param id will be ignored)</field>
		</message>
		<message id="229" name="PARAM_STR_VALUE">
           <description>Emit the value of a onboard parameter. The inclusion of param_count and param_index in the message allows the recipient to keep track of received parameters and allows him to re-request missing parameters after a loss or timeout.</description>
           <field type="int16_t" name="param_index">Parameter index.</field>
	       <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
	       <field type="char[16]" name="param_value">Onboard parameter value</field>
		</message>

		<message id="235" name="SPH_ADSB_TRANSPONDER_STATE">
			<description>Status messages for particular ADS-B transponder</description>
			<field type="uint8_t" name="type">ADSB vendors type </field>
			<field type="uint8_t" name="error_flags">bit0: GPS error, bit1: ICAO error, bit2: Over temperature, bit3: Extended squitter failure, bit4: Transponder error</field>
			<field type="uint8_t" name="altitude_source_internal">1: Altitude taken from internal barometer, 0: Altitude taken from flight controller</field>
			<field type="uint8_t" name="transponder_mode">See ADSB_TRANSPONDER_MODE enum</field>
			<field type="uint8_t" name="ident_active">1: IDENT active, 0: not active</field>
			<field type="float" name="altitude">Altitude </field>
			<field type="int16_t" name="squawk_code">Current squawk code. 12 bit integer</field>
		</message>
	</messages>
</mavlink>

