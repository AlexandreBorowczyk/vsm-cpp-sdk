/**

@page ucs_vsm_registration_page Vehicle registration with UCS

@tableofcontents

@section registration_overview Overview

Upon detecting a vehicle VSM sends @b Vsm_message with \ref register_vehicle_message "Register_vehicle" payload. This request serves for several purposes:
 - Associate Vehicle name and tailnumber with ID which will be used to reference this vehicle instance during the session.
 - Define time origin for subsequent telemetry messages
 - Tell server the telemetry fields supported by vehicle
 - Tell server the mission items supported by vehicle
 - Tell server the commands supported by vehicle

@section register_device_message Register_device message

|Field name| Type| Description|
|---|---|---|
| begin_of_epoch| uint64, milliseconds| Start of epoch since 1970-01-01 00:00:00 UTC. All timestamps in telemetry fields will be relative to this value.|
| properties|Property_field | User defined list of key-value pairs used to tell ucs additional information about vehicle.|
| register_vehicle | \ref register_vehicle_message "Register_vehicle" | |
| register_adsb_aircraft | Register_adsb_aircraft | |
UgCS server will use value pair _vehicle_name + vehicle_tail_number_ to uniquely identify the vehicle system wide and across multiple sessions.


@section register_vehicle_message Register_vehicle message

|Field name| Type| Description|
|---|---|---|
| vehicle_serial|UTF8 string | (Preferrably unique) tail number of the vehicle. User configurable or generated by VSM. |
| autopilot_type|UTF8 string | Value from @ref autopilot_list or user defined value |
| autopilot_serial|UTF8 string | Autopilot serial number |
| port_name | UTF8 string | Connection name (Eg. "COM11" or "tcp:1.2.3.4:12345") |
| frame_type| UTF8 string| value from @ref frame_list or user defined value |
| begin_of_epoch| uint64, milliseconds| Start of epoch since 1970-01-01 00:00:00 UTC. All timestamps in telemetry fields will be relative to this value.|
| properties|Property_field | User defined list of key-value pairs used to tell ucs additional information about vehicle.|
| telemetry_fields|Register_field | List of telemetry fields sent by the VSM. See @ref ucs_vsm_telemetry_page for details.|
| commands|Register_command | List of available commands and mission items accepted by Vehicle. See @ref vehicle_commands and @ref mission_items for details|

UgCS server will use value pair _vehicle_name + vehicle_tail_number_ to uniquely identify the vehicle system wide and across multiple sessions.

@section register_command Register_command message

Register_command message is used to register feature supported by vehicle with UgCS.
Later VSM can dynamically enable/disable all previously registered commands via Command_availability message.

|Field name | Field type| Description|
|---|---|---|
|name| string | Name of command. Either telemetry field or mission item or vehicle command.|
|id| uint32 | Session specific ID mapped to this command.|
|parameters| Register_field| List of parameters supported by given command. (See also @ref register_field)|
|available_in_mission| bool | this command is available as part of mission |
|available_as_command| bool | this command is available standalone command |

Formal definition is found in @b Register_command message in @ref ucs_vsm_proto_page file.

---

@section autopilot_list Autopilot names
List of autopilots which can be reported by VSM in @b Register_vehicle.autopilot_type field and UgCS will know how to display them.

|Name| Description|
|---|---|
ardupilot   |ArdupilotMega, Ardupilot on Pixhawk
px4         |PX4
ardrone     |Parrot ArDrone
dji_a2      |DJI A2
dji_a3      |DJI A3
dji_wkm     |DJI Wookong
dji_naza    |DJI NAZA V2
dji_phantom2|DJI Phantom2
dji_phantom2_vp|DJI Phantom2 Vision Plus
dji_phantom3|DJI Phantom3
dji_phantom4|DJI Phantom4
dji_phantom4_pro|DJI Phantom4 Pro
dji_inspire1|DJI Inspire1
dji_inspire2|DJI Inspire2
dji_matrice100|DJI Matrice 100
dji_matrice600|DJI Matrice 600
dji_ace|DJI ACE
dji_mavic|DJI Mavic
dji_n3|DJI N3
microdrones |Microdrones MD200, MD1000
mikrokopter |Mikrokopter
micropilot  |Micropilot
kestrel     |Kestrel
emulator    |Built in vehicle emulator

VSM can report other values here. In that case user will need to select the vehicle profile manually.

@section frame_list Vehicle frames

VSM should tell the frame type upon vehicle registration.
VSM can report any string as frame name. If non built-in values are reporthed then user will need to select the frame avatar for the vehicle manually. 
List of built-in frame names which can be reported by VSM @b Register_vehicle.frame_type field.
|Name| Description|
|---|---|
generic_fixed_wing  |Plane
generic_heli        |Classic heli frame
generic_tri_y       |Three leg (Y type) frame with two legs in front
generic_quad_i      |Four leg frame with one leg in front
generic_quad_x      |Four leg frame with two legs in front
generic_hexa_i      |Six leg frame with one leg in front
generic_hexa_v      |Six leg frame with two legs in front
generic_hexa_y      |Three leg (Y type) frame with double rotors two legs in front
generic_hexa_yi     |Three leg (Y type) frame with double rotors one leg in front
generic_octa_x      |Four leg (X type) frame with double rotors two legs in front
generic_octa_xi     |Four leg (+ type) frame with double rotors one leg in front
generic_octa_i      |Eight leg frame with one leg in front
generic_octa_v      |Eight leg frame with two legs in front
generic_tilt_rotor  |Tilt rotor
generic_vtol_duo    |VTOL plane with 2 rotors
generic_vtol_quad   |VTOL plane with 4 rotors
generic_vtol        |Generic VTOL capable vehicle 
3dr_iris            |3DR Iris frame (quad)
dji_phantom         |DJI Phantom2/3/4
dji_matrice         |DJI Matrice 100
dji_inspire         |DJI Inspire1
ardrone             |ArDRone

*/
